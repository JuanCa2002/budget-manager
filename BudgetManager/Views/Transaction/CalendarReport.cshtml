@using BudgetManager.Models.Enums
@{
    ViewData["Title"] = "Reporte Calendario";
}

<partial name="_Submenu" model="TransactionsSubmenu.Calendar"></partial>

<div id="calendar"></div>

<div class="modal fade" id="transactionModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Transacciones del día</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th id="tableDateModal" colspan="2"></th>
                            <th id="tableDateIncome" class="active"></th>
                            <th id="tableDateOutcome" class="passive"></th>
                        </tr>
                    </thead>
                    <tbody id="tableModalBody"></tbody>
                </table>
            </div>
            <div class="modal-footer">
               <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/fullcalendar/index.global.min.js"></script>

    <script>

        document.addEventListener('DOMContentLoaded', function() {
          var calendarEl = document.getElementById('calendar');
          var calendar = new FullCalendar.Calendar(calendarEl, {
            dayMaxEventRows: 3,
            initialView: 'dayGridMonth',
            events: '/Transaction/GetTransactionsCalendar',
            dateClick: async function(info) {
                await getTransactionsByDate(info.dateStr);
            }
          });
          calendar.render();
        });

        async function getTransactionsByDate(date){
            const response = await fetch(`/Transaction/GetTransactionsByDate?date=${date}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const json = await response.json();

            let incomes = 0;
            let outcomes = 0;
            const transactionTypeIncome = 1;

            const formatter = new Intl.NumberFormat('en-US',{
                style: 'currency',
                currency: 'USD'
            });

            const rows = json.map(transaction => {
                if (transaction.transactionTypeId === transactionTypeIncome) {
                    incomes += transaction.amount;
                } else {
                    outcomes += transaction.amount;
                }

                return `<tr>
                            <td>
                                ${transaction.category}
                            </td>
                            <td>
                                ${transaction.account}
                            </td>
                            <td align="right" colspan="2"
                                class=${transaction.transactionTypeId === transactionTypeIncome ? 'active': 'passive'}
                                >
                                ${formatter.format(transaction.amount)}
                            </td>
                        </tr>`;
            });

            $("#tableModalBody").html(rows);
            $("#tableDateIncome").html(formatter.format(incomes));
            $("#tableDateOutcome").html(formatter.format(outcomes));
            $("#tableDateModal").html(date);

            const transactionModal = new bootstrap.Modal(document.getElementById('transactionModal'));

            transactionModal.show();
        }

    </script>
}